package com.hcl.inventory;

import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.junit.Test;








public class InventoryTestCase {
	
	@Test
	public void testaddStock() {
		Stock objStock=new Stock();
		String Stock=StockBAL.generateStockBal();
		objStock.setStockId("stid");
		objStock.setItemName("Laptop");
		objStock.setPrice(50000);
		objStock.setQuantityAvail(2);
		assertEquals("Stock created successfully",StockBAL.addStockBal(objStock));
	}

	
	
	
	
	@Test
	public void testPlaceStock() {
		assertEquals("Order Placed Successfully...", StockBAL.placeOrderBal("S001", 1));
        assertEquals("Insufficent Quantity...", StockBAL.placeOrderBal("S001",43));
	    assertEquals("StockID not found...", StockBAL.placeOrderBal("A001",5));
	
	}
	
	
	@Test
	public void testSearchStock() {
		assertNotNull(StockBAL.searchStockBal("S001"));
		assertNull(StockBAL.searchStockBal("A001"));
	}
	
	
	@Test
	public void testDaoConnection() {
		assertNotNull(DaoConnection.getConnection());
	}
	
	
	@Test
	public void testgenerateStock() {
		
	    Connection con=DaoConnection.getConnection();
		String stockId;
		String cmd="select max(stockId) sid from stock";
		String stid=" ";
		
		try {
			PreparedStatement pst = con.prepareStatement(cmd);
			ResultSet rs=pst.executeQuery();
			rs.next();
			stid=rs.getString("sid");
			int id = Integer.parseInt(stid.substring(1));
			id++;
			if(id>=1 && id<=9) {
				stid="S00" +id;
			}
			
			if(id>=10 && id<=99) {
				stid="S0" +id;
			}
			
			if(id>=100 && id<=999) {
				stid="S" +id;
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			assertEquals(stid, StockBAL.generateStockBal());
			
	}

	
	@Test
	public void testGettersAndSetters() {
		Stock objStock=new Stock();
		objStock.setStockId("S001");
		objStock.setItemName("Laptop");
		objStock.setPrice(50000);
		objStock.setQuantityAvail(5);
		
		assertEquals("S001", objStock.getStockId());
		assertEquals("Laptop", objStock.getItemName());
		assertEquals(50000, objStock.getPrice());
		assertEquals(5, objStock.getQuantityAvail());
		
	
	
	}
	
}

